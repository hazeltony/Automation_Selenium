<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="2" ignored="0" total="12" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="594" started-at="2020-03-03T10:16:13 IST" finished-at="2020-03-03T10:16:14 IST">
    <groups>
    </groups>
    <test name="Test depends on methods feature" duration-ms="344" started-at="2020-03-03T10:16:13 IST" finished-at="2020-03-03T10:16:14 IST">
      <class name="basicTestAnnotations.FirstTestNGClass">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="test3()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="test3" duration-ms="15" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test1()[pri:1, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="test1" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:2, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="test2" duration-ms="15" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- basicTestAnnotations.FirstTestNGClass -->
      <class name="basicTestAnnotations.DependsOnMethod">
        <test-method status="PASS" signature="automobileTestInitialization()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="automobileTestInitialization" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:13 IST" finished-at="2020-03-03T10:16:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automobileTestInitialization -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="login" duration-ms="32" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at basicTestAnnotations.DependsOnMethod.login(DependsOnMethod.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="verifyHomepage" duration-ms="0" started-at="2020-03-03T10:16:14 IST" depends-on-methods="basicTestAnnotations.DependsOnMethod.login" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethod.verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethod.verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepage -->
        <test-method status="SKIP" signature="logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="logout" duration-ms="0" started-at="2020-03-03T10:16:14 IST" depends-on-methods="basicTestAnnotations.DependsOnMethod.verifyHomepage, basicTestAnnotations.DependsOnMethod.login" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethod.logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethod.logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="automobileTeardown()[pri:0, instance:basicTestAnnotations.DependsOnMethod@3e9b1010]" name="automobileTeardown" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automobileTeardown -->
      </class> <!-- basicTestAnnotations.DependsOnMethod -->
    </test> <!-- Test depends on methods feature -->
    <test name="Test priority feature" duration-ms="109" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
      <class name="basicTestAnnotations.FirstTestNGClass">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="test3" duration-ms="16" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:1, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="test1" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="test2()[pri:2, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="test2" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.FirstTestNGClass@35d176f7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- basicTestAnnotations.FirstTestNGClass -->
      <class name="basicTestAnnotations.DependsOnMethod">
        <test-method status="PASS" signature="suiteInitialization()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="suiteInitialization" is-config="true" duration-ms="47" started-at="2020-03-03T10:16:13 IST" finished-at="2020-03-03T10:16:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteInitialization -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="login()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="login" duration-ms="15" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at basicTestAnnotations.DependsOnMethod.login(DependsOnMethod.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="automobileTestInitialization()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="automobileTestInitialization" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automobileTestInitialization -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="verifyHomepage" duration-ms="0" started-at="2020-03-03T10:16:14 IST" depends-on-methods="basicTestAnnotations.DependsOnMethod.login" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethod.verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethod.verifyHomepage()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepage -->
        <test-method status="SKIP" signature="logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="logout" duration-ms="0" started-at="2020-03-03T10:16:14 IST" depends-on-methods="basicTestAnnotations.DependsOnMethod.verifyHomepage, basicTestAnnotations.DependsOnMethod.login" finished-at="2020-03-03T10:16:14 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnMethod.logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnMethod.logout()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="automobileTeardown()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="automobileTeardown" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automobileTeardown -->
        <test-method status="PASS" signature="suiteTearDown()[pri:0, instance:basicTestAnnotations.DependsOnMethod@551aa95a]" name="suiteTearDown" is-config="true" duration-ms="0" started-at="2020-03-03T10:16:14 IST" finished-at="2020-03-03T10:16:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteTearDown -->
      </class> <!-- basicTestAnnotations.DependsOnMethod -->
    </test> <!-- Test priority feature -->
  </suite> <!-- Suite -->
</testng-results>
